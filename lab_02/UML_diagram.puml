@startuml
class logic.unit.BaseUnit {
- int row
- int col
~ boolean isWhite
- String name
# int hp
# int power
~ boolean isFlying
+ boolean move(int)
+ void attack(ArrayList<BaseUnit>)
+ int getRow()
+ void setRow(int)
+ int getColumn()
+ void setColumn(int)
+ boolean isWhite()
+ void setWhite(boolean)
+ String getName()
+ void setName(String)
+ int getHp()
+ void setHp(int)
+ int getPower()
+ boolean isFlying()
}


class logic.game.GameSystem {
- ArrayList<BaseUnit> allWhitePieces
- ArrayList<BaseUnit> allRedPieces
- boolean gameEnd
- {static} GameSystem instance
+ {static} GameSystem getInstance()
+ boolean isGameEnd()
+ void setGameEnd(boolean)
+ ArrayList<BaseUnit> getAllWhitePieces()
+ ArrayList<BaseUnit> getAllRedPieces()
+ void printBoardStatus(ArrayList<BaseUnit>)
+ void removeDeadPieces(ArrayList<BaseUnit>)
+ BaseUnit promote(BaseUnit,int)
}


class logic.unit.MeleeUnit {
}
class logic.unit.FlyingUnit {
+ boolean move(int)
}

class logic.unit.RangeUnit {
+ void attack(ArrayList<BaseUnit>)
}



logic.unit.BaseUnit <|-- logic.unit.MeleeUnit
logic.unit.BaseUnit <|-- logic.unit.FlyingUnit
logic.unit.BaseUnit <|-- logic.unit.RangeUnit
@enduml