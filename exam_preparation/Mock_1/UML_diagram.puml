@startuml
class container.NeuronDemo {
- Neuron n
+ void demonstrate()
+ Neuron getN()
+ void setN(Neuron)
}


class container.Layer {
~ Neuron[] neurons
~ Function function
+ double applyActivation(double)
+ double applyActivationDerivative(double)
+ Neuron[] getNeurons()
+ void setNeurons(Neuron[])
+ Function getFunction()
+ void setFunction(Function)
}


class container.Neuron {
- {static} double minWeightValue
- {static} double maxWeightValue
- double[] weights
- double gradient
- double bias
- double value
+ {static} double getMinWeightValue()
+ {static} double getMaxWeightValue()
+ double[] getWeights()
+ double getGradient()
+ double getBias()
+ double getValue()
+ {static} void setRangeWeight(double,double)
+ void setWeights(double[])
+ void setGradient(double)
+ void setBias(double)
+ void setValue(double)
}


@enduml