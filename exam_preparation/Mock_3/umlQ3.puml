@startuml
class game.piece.Bishop {
+ Object deepCopy()
}

class game.util.Movement {
# Position current
# Set<Position> moves
# Board board
+ void diagonalMove()
+ void lShapeMove()
+ void setCurrent(Position)
+ Set<Position> getMoves()
+ Board getBoard()
+ void setBoard(Board)
+ void getMovePositions(Piece)
}


class game.piece.Piece {
# boolean white
# boolean moved
# Position position
# Board board
+ Set<Position> getLegalMove()
+ Object deepCopy()
+ String toString()
+ void moveHandle(Position)
+ boolean hadMoved()
+ boolean equals(Object)
+ boolean isWhite()
+ void setWhite(boolean)
+ boolean isMoved()
+ void setMoved(boolean)
+ Position getPosition()
+ void setPosition(Position)
+ Board getBoard()
+ void setBoard(Board)
}


class game.piece.Knight {
+ Object deepCopy()
}



game.piece.Piece <|-- game.piece.Bishop
game.piece.Piece <|-- game.piece.Knight
@enduml